@page "/sigmaruledetails/{fileName}"
@using MicroArcSec.Client.Classes;
@using Microsoft.AspNetCore.Components;
@using MicroArcSec.Client.Data;

@inject NavigationManager Navigation

@if (Model is null)
{
    <p>Loading...</p>
}
else
{
    <button class="dashed-border-button" @onclick="GoBack">GO BACK TO THE MAIN PAGE</button>

    <div class="modal-body">
        <h2 class="text-2xl font-bold mb-2 detail-header">@Model.title</h2>
        <p class="text-gray-500 mb-4 detail-header-desciption">@Model.description</p>
        <div class="detail-body">
            <div>
                <h3 class="text-xl font-bold mb-2">Status:</h3>
                <p class="text-gray-500" style="padding-left:25px">@Model.status</p>
            </div>
            <div>
                <h3 class="text-xl font-bold mb-2">Date:</h3>
                <p class="text-gray-500" style="padding-left:25px">@Model.date?.ToString("yyyy/MM/dd hh:mm:ss")</p>
            </div>
            <div class="mt-4">
                <h3 class="text-xl font-bold mb-2">Logsource</h3>
                <div>
                    <h4 class="text-gray-700 font-bold mb-2" style="padding-left:25px">Category:</h4>
                    <p class="text-gray-500" style="padding-left:50px">@Model.logsource.category</p>
                </div>
            </div>
            @if (Model.detection is not null)
            {
                <div class="mt-4">
                    <h3 class="text-xl font-bold mb-2">Detection</h3>
                    <div>
                        <h4 class="text-gray-700 font-bold mb-2" style="padding-left:25px">Condition:</h4>
                        <ul class="list-disc ml-4" style="padding-left:65px">
                            <li class="text-gray-500">@Model.detection.condition</li>
                        </ul>
                    </div>
                    @if (Model.detection.Selection is not null)
                    {
                        <h4 class="text-xl font-bold mb-2" style="padding-left:25px">Selections:</h4>
                        @if (Model.detection.Selection.curi.Count > 0)
                        {
                            <h4 class="text-gray-700 mb-2" style="padding-left:45px">c-uri:</h4>
                            <ul class="list-disc ml-4" style="padding-left:85px">
                                @foreach (var curi in @Model.detection.Selection.curi)
                                {
                                    <li class="text-gray-500">@curi</li>
                                }
                            </ul>
                        }
                        @if (Model.detection.Selection.cmd.Count > 0)
                        {
                            <h4 class="text-gray-700 mb-2" style="padding-left:45px">Command Line:</h4>
                            <ul class="list-disc ml-4" style="padding-left:85px">
                                @foreach (var cmd in @Model.detection.Selection.cmd)
                                {
                                    <li class="text-gray-500">@cmd</li>
                                }
                            </ul>
                        }
                        @if (Model.detection.Selection.ip.Count > 0)
                        {
                            <h4 class="text-gray-700 mb-2" style="padding-left:45px">IP Address:</h4>
                            <ul class="list-disc ml-4" style="padding-left:85px">
                                @foreach (var ip in @Model.detection.Selection.ip)
                                {
                                    <li class="text-gray-500">@ip</li>
                                }
                            </ul>
                        }
                    }
                    @if (Model.detection.fields.Count > 0)
                    {
                        <div class="mt-4">
                            <h4 class="text-lg font-bold mb-2" style="padding-left:25px">Fields:</h4>
                            <ul class="list-disc ml-4" style="padding-left:65px">
                                @foreach (var field in Model.detection.fields)
                                {
                                    <li class="text-gray-500">@field</li>
                                }
                            </ul>
                        </div>
                    }
                    @if (Model.detection.FalsePositives.Count > 0)
                    {
                        <div class="mt-4">
                            <h4 class="text-lg font-bold mb-2" style="padding-left:25px">False positives:</h4>
                            <ul class="list-disc ml-4" style="padding-left:65px">
                                @foreach (var fp in Model.detection.FalsePositives)
                                {
                                    <li class="text-gray-500">@fp</li>
                                }
                            </ul>
                        </div>
                    }
                    <div class="mt-4">
                        <h4 class="text-gray-700 font-bold mb-2" style="padding-left:25px">Level:</h4>
                        <p class="text-gray-500 @(Model.detection.level.Equals("high", StringComparison.CurrentCultureIgnoreCase) ? "bg-danger" : "bg-warning")" style="padding-left:45px">@Model.detection.level</p>
                    </div>
                    @if (Model.detection.tags.Count > 0)
                    {
                        <div class="mt-4">
                            <h4 class="text-lg font-bold mb-2" style="padding-left:25px">Tags:</h4>
                            <ul class="list-disc ml-4" style="padding-left:65px">
                                @foreach (var tag in Model.detection.tags)
                                {
                                    <li class="text-gray-500">@tag</li>
                                }
                            </ul>
                        </div>
                    }
                </div>
            }
        </div>
    </div>
}
@code {
    [Parameter]
    public string FileName { get; set; }

    private SigmaRuleModel Model { get; set; }

    protected override void OnInitialized()
    {
        Model = Tools.GetRuleByName(FileName);
        base.OnInitialized();
    }    

    void GoBack()
    {
        Navigation.NavigateTo("/");
    }
}